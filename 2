loading annotations into memory...
Done (t=0.73s)
creating index...
index created!
[info] subset = 500 images
==== RAW OUTPUT (image 1: 000000397133.jpg) ====
USER:  
You are an object detection assistant. Return a STRICT JSON object:
{"detections":[{"label":"<CLASS>","box":[x1,y1,x2,y2],"confidence":<0..1>}, ...]}
Rules:
1) Output ONLY JSON, no extra words.
2) Box coordinates are NORMALIZED to [0,1], (x1,y1)=top-left, (x2,y2)=bottom-right.
3) If nothing is found, return {"detections":[]}.
4) The label MUST be one of the 80 COCO classes (singular, English): person, bicycle, car, motorcycle, airplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, couch, potted plant, bed, dining table, toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush. 5) At most 15 objects. ASSISTANT: {"detections":[{"label":"<CLASS>","box":[0.0,0.1,0.1,0.2],"confidence":0.1},{"label":"<CLASS>","box":[0.0,0.1,0.1,0.2],"confidence":0.1},{"label":"<CLASS>","box":[0.0,0.1,0.1,0.2],"confidence":0.1},{"label":"<CLASS>","box":[0.0,0.1,0.1,0.2],"confidence":0.1},{"label":"<CLASS>","box":[0.0,0.1,0.1,0.2],"confidence":0.1},{"label":"<CLASS>","box":[
==== RAW OUTPUT (image 2: 000000037777.jpg) ====
USER:  
You are an object detection assistant. Return a STRICT JSON object:
{"detections":[{"label":"<CLASS>","box":[x1,y1,x2,y2],"confidence":<0..1>}, ...]}
Rules:
1) Output ONLY JSON, no extra words.
2) Box coordinates are NORMALIZED to [0,1], (x1,y1)=top-left, (x2,y2)=bottom-right.
3) If nothing is found, return {"detections":[]}.
4) The label MUST be one of the 80 COCO classes (singular, English): person, bicycle, car, motorcycle, airplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, couch, potted plant, bed, dining table, toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush. 5) At most 15 objects. ASSISTANT: {"detections":[{"label":"<CLASS>","box":[0.31,0.5,0.5,0.69],"confidence":0.85},{"label":"<CLASS>","box":[0.69,0.5,0.85,0.69],"confidence":0.85},{"label":"<CLASS>","box":[0.0,0.5,0.2,0.99],"confidence":0.85}]}
==== RAW OUTPUT (image 3: 000000252219.jpg) ====
USER:  
You are an object detection assistant. Return a STRICT JSON object:
{"detections":[{"label":"<CLASS>","box":[x1,y1,x2,y2],"confidence":<0..1>}, ...]}
Rules:
1) Output ONLY JSON, no extra words.
2) Box coordinates are NORMALIZED to [0,1], (x1,y1)=top-left, (x2,y2)=bottom-right.
3) If nothing is found, return {"detections":[]}.
4) The label MUST be one of the 80 COCO classes (singular, English): person, bicycle, car, motorcycle, airplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, couch, potted plant, bed, dining table, toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush. 5) At most 15 objects. ASSISTANT: {"detections":[{"label":"<CLASS>","box":[0.3,0.69,0.4,0.78],"confidence":0.99},{"label":"<CLASS>","box":[0.3,0.69,0.4,0.78],"confidence":0.99},{"label":"<CLASS>","box":[0.3,0.69,0.4,0.78],"confidence":0.99},{"label":"<CLASS>","box":[0.3,0.69,0.4,0.78],"confidence":0.99},{"label":"<CLASS>","box":[0.3,0.69,0.4,0.78],"confidence":0
==== RAW OUTPUT (image 4: 000000087038.jpg) ====
USER:  
You are an object detection assistant. Return a STRICT JSON object:
{"detections":[{"label":"<CLASS>","box":[x1,y1,x2,y2],"confidence":<0..1>}, ...]}
Rules:
1) Output ONLY JSON, no extra words.
2) Box coordinates are NORMALIZED to [0,1], (x1,y1)=top-left, (x2,y2)=bottom-right.
3) If nothing is found, return {"detections":[]}.
4) The label MUST be one of the 80 COCO classes (singular, English): person, bicycle, car, motorcycle, airplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, couch, potted plant, bed, dining table, toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush. 5) At most 15 objects. ASSISTANT: {"detections":[{"label":"<CLASS>","box":[0.35,0.49,0.59,0.69],"confidence":0.99},{"label":"<CLASS>","box":[0.35,0.49,0.59,0.69],"confidence":0.99},{"label":"<CLASS>","box":[0.35,0.49,0.59,0.69],"confidence":0.99},{"label":"<CLASS>","box":[0.35,0.49,0.59,0.69],"confidence":0.99},{"label":"<CLASS>","box":[0.35,0.49,0.59,
==== RAW OUTPUT (image 5: 000000174482.jpg) ====
USER:  
You are an object detection assistant. Return a STRICT JSON object:
{"detections":[{"label":"<CLASS>","box":[x1,y1,x2,y2],"confidence":<0..1>}, ...]}
Rules:
1) Output ONLY JSON, no extra words.
2) Box coordinates are NORMALIZED to [0,1], (x1,y1)=top-left, (x2,y2)=bottom-right.
3) If nothing is found, return {"detections":[]}.
4) The label MUST be one of the 80 COCO classes (singular, English): person, bicycle, car, motorcycle, airplane, bus, train, truck, boat, traffic light, fire hydrant, stop sign, parking meter, bench, bird, cat, dog, horse, sheep, cow, elephant, bear, zebra, giraffe, backpack, umbrella, handbag, tie, suitcase, frisbee, skis, snowboard, sports ball, kite, baseball bat, baseball glove, skateboard, surfboard, tennis racket, bottle, wine glass, cup, fork, knife, spoon, bowl, banana, apple, sandwich, orange, broccoli, carrot, hot dog, pizza, donut, cake, chair, couch, potted plant, bed, dining table, toilet, tv, laptop, mouse, remote, keyboard, cell phone, microwave, oven, toaster, sink, refrigerator, book, clock, vase, scissors, teddy bear, hair drier, toothbrush. 5) At most 15 objects. ASSISTANT: {"detections":[{"label":"bicycle","box":[0.19,0.12,0.79,0.99],"confidence":0.99},{"label":"car","box":[0.09,0.13,0.28,0.24],"confidence":0.99},{"label":"truck","box":[0.64,0.18,0.82,0.28],"confidence":0.99},{"label":"bus","box":[0.74,0.13,0.9,0.25],"confidence":0.99},{"label":"motorcycle","box":[0.19,0.12,0.3,0.24],"confidence":0.9
[100/500] dt=0
