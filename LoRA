{
  "coco_detjson_train": {
    "file_name": "train2017_detjson_abs.jsonl",
    "formatting": "sharegpt",
    "columns": { "messages": "conversations" },
    "tags": { "role_tag": "from", "content_tag": "value", "user_tag": "user", "assistant_tag": "assistant" },
    "multi_modal": true,
    "image_field": "images"
  },
  "coco_detjson_val": {
    "file_name": "val2017_detjson_abs.jsonl",
    "formatting": "sharegpt",
    "columns": { "messages": "conversations" },
    "tags": { "role_tag": "from", "content_tag": "value", "user_tag": "user", "assistant_tag": "assistant" },
    "multi_modal": true,
    "image_field": "images"
  }
}


——————————————————————————————————————————————————
# 随机抽两行确认 images 为“单元素列表 + 绝对路径”
python - <<'PY'
import json, os, random
for p in ["/home/vipuser/lf_data/train2017_detjson_abs.jsonl",
          "/home/vipuser/lf_data/val2017_detjson_abs.jsonl"]:
    with open(p) as f:
        lines = [next(f) for _ in range(2)]
    for line in lines:
        o = json.loads(line)
        imgs = o.get("images", [])
        assert isinstance(imgs, list) and len(imgs)==1, "images must be single-item list"
        assert imgs[0].startswith("/home/vipuser/coco/images/") and os.path.exists(imgs[0])
print("OK: images column looks good.")
PY


————————————————————————————————————————————————————————————
source ~/llavaenv/bin/activate

llamafactory-cli train \
  --stage sft \
  --finetuning_type lora \
  --model_name_or_path /home/vipuser/llava-1.5-7b-hf \
  --dataset_dir /home/vipuser/lf_data \
  --dataset coco_detjson_train \
  --eval_dataset coco_detjson_val \
  --template llava \
  --cutoff_len 1024 \
  --learning_rate 5e-05 \
  --num_train_epochs 3 \
  --per_device_train_batch_size 2 \
  --gradient_accumulation_steps 8 \
  --lora_rank 8 \
  --lora_alpha 16 \
  --lora_dropout 0.1 \
  --lora_target all \
  --output_dir /home/vipuser/saves/lf_llava15_7b_coco_loraB

________________________
   
